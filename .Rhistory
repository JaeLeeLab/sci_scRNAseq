FUN = match_metadata,
order.char = rownames(sci@meta.data),
obs.ls = list(obs_myeloid, obs_vascular, obs_macroglia)
)
)
cols_sci <- c('sample_id','time','celltype','orig.ident','nCount_RNA','nFeature_RNA','S.Score','G2M.Score','Phase','CC.Difference','percent_mt','percent_rp','percent_hbb','doublet_scores','dissociationMethod','chemistry')
obs_sci <- cbind(sci@meta.data[, cols_sci], obs_transfer)
colnames(obs_sci) <- c(cols_sci, cols_transfer)
head(obs_sci)
ggplot(data = obs_sci, mapping = aes_string(x = 'myeloid_UMAP_1', y = 'myeloid_UMAP_2')) +
geom_point(mapping = aes_string(color = 'L2_taxon')) +
scale_color_viridis_d()
?scale_color_manual
ggplot(data = obs_sci, mapping = aes_string(x = dim1, y = dim2)) +
geom_point(mapping = aes_string(color = dim_col)) +
scale_color_manual(values = dim_col_scale,
na.value = NA)
dim_x <- 'myeloid_UMAP_1'
dim_y <- 'myeloid_UMAP_2'
dim_col <- 'L2_taxon'
dim_col_scale <- myeloid_cols
ggplot(data = obs_sci, mapping = aes_string(x = dim1, y = dim2)) +
geom_point(mapping = aes_string(color = dim_col)) +
scale_color_manual(values = dim_col_scale,
na.value = NA)
dim_x <- 'myeloid_UMAP_1'
dim_y <- 'myeloid_UMAP_2'
dim_col <- 'L2_taxon'
dim_col_scale <- myeloid_cols
ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
scale_color_manual(values = dim_col_scale,
na.value = NA)
myeloid_cols <- c('#800000',
'#9a6324',
'#e6194b',
'#f58231',
'#CCCC00',
'#808000',
'#3cb44b',
'#008080',
'cyan3',
'#4363d8',
'#000075',
'#911eb4')
ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
scale_color_manual(values = dim_col_scale,
na.value = NA)
dim_x <- 'myeloid_UMAP_1'
dim_y <- 'myeloid_UMAP_2'
dim_col <- 'L2_taxon'
myeloid_cols <- c('#800000',
'#9a6324',
'#e6194b',
'#f58231',
'#CCCC00',
'#808000',
'#3cb44b',
'#008080',
'cyan3',
'#4363d8',
'#000075',
'#911eb4')
ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col))
ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
scale_color_gradientn(colors = RColorBrewer::brewer.pal(n = 9, name = 'Spectral'))
?scale_color_discrete()
ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
scale_color_discrete(type = RColorBrewer::brewer.pal(n = 9, name = 'Spectral'))
RColorBrewer::brewer.pal(n = 9, name = 'Spectral')
colorRamp(colors = RColorBrewer::brewer.pal(n = 9, name = 'Spectral'))
ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
scale_color_discrete(type = colorRamp(colors = RColorBrewer::brewer.pal(n = 9, name = 'Spectral')))
ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
scale_color_discrete(type = colorRamp(colors = RColorBrewer::brewer.pal(n = 9, name = 'Spectral')))
colorRamp(colors = RColorBrewer::brewer.pal(n = 9, name = 'Spectral'))
colorRamp(colors = RColorBrewer::brewer.pal(n = 9, name = 'Spectral'))(10)
colorRamp(colors = RColorBrewer::brewer.pal(n = 9, name = 'Spectral'))(
''
''sa;
colorRamp(colors = RColorBrewer::brewer.pal(n = 9, name = 'Spectral'))
test <- colorRamp(colors = RColorBrewer::brewer.pal(n = 9, name = 'Spectral'))
test(10)
test(20)
test(1)
colorRampPalette(colors = RColorBrewer::brewer.pal(n = 9, name = 'Spectral'))
colorRampPalette(colors = RColorBrewer::brewer.pal(n = 9, name = 'Spectral'))(10)
ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
scale_color_discrete(type = colorRampPalette(colors = RColorBrewer::brewer.pal(n = 9, name = 'Spectral')))
ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
scale_color_discrete(type = colorRampPalette(colors = RColorBrewer::brewer.pal(n = 9, name = 'Spectral')))
colorRampPalette(colors = RColorBrewer::brewer.pal(n = 9, name = 'Spectral'))
?scale_fill_brewer()
ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col))
ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
theme(panel.background = element_rect(colour = NA, fill = NA),
panel.border = element_rect(colour = NA, fill = NA))
ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
theme(panel.background = element_rect(colour = NA, fill = NA),
panel.border = element_rect(colour = NA, fill = NA),
axis.title = element_text(hjust = 1))
ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
theme(panel.background = element_rect(colour = NA, fill = NA),
panel.border = element_rect(colour = NA, fill = NA),
axis.title = element_text(hjust = 0),
axis.ticks = element_blank()) +
guides(color = guide_legend(override.aes = list(size = 4)))
suppressWarnings(
expr = ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
theme(panel.background = element_rect(colour = NA, fill = NA),
panel.border = element_rect(colour = NA, fill = NA),
axis.title = element_text(hjust = 0),
axis.ticks = element_blank()) +
guides(color = guide_legend(override.aes = list(size = 4)))
)
ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
theme(panel.background = element_rect(colour = NA, fill = NA),
panel.border = element_rect(colour = NA, fill = NA),
axis.title = element_text(hjust = 0),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.key = element_rect(fill = NA)) +
guides(color = guide_legend(override.aes = list(size = 4)))
ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
theme(panel.background = element_rect(colour = NA, fill = NA),
panel.border = element_rect(colour = NA, fill = NA),
axis.title = element_text(hjust = 0, size = 12),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12)) +
guides(color = guide_legend(override.aes = list(size = 4)))
ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
theme(panel.background = element_rect(colour = NA, fill = NA),
panel.border = element_rect(colour = NA, fill = NA),
axis.title = element_text(hjust = 0, size = 12),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12)) +
annotate(geom = 'segment', x = 0, xend = 1, y = 0, yend = 0)
ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
theme(panel.background = element_rect(colour = NA, fill = NA),
panel.border = element_rect(colour = NA, fill = NA),
axis.title = element_text(hjust = 0, size = 12),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12)) +
annotate(geom = 'arrow', x = 0, xend = 1, y = 0, yend = 0)
ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
theme(panel.background = element_rect(colour = NA, fill = NA),
panel.border = element_rect(colour = NA, fill = NA),
axis.title = element_text(hjust = 0, size = 12),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12)) +
annotate(geom = 'sement',
x = 0,
xend = 1,
y = 0,
yend = 0,
color = 'black',
lwd = 1,
arrow = arrow(
angle = 30,
length = unit(
x = 3,
units = 'mm'
)
)
)
ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
theme(panel.background = element_rect(colour = NA, fill = NA),
panel.border = element_rect(colour = NA, fill = NA),
axis.title = element_text(hjust = 0, size = 12),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12)) +
annotate(geom = 'segment',
x = 0,
xend = 1,
y = 0,
yend = 0,
color = 'black',
lwd = 1,
arrow = arrow(
angle = 30,
length = unit(
x = 3,
units = 'mm'
)
)
)
p1 <- ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
theme(panel.background = element_rect(colour = NA, fill = NA),
panel.border = element_rect(colour = NA, fill = NA),
axis.title = element_text(hjust = 0, size = 12),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12))
p1$mapping$x
p1$mapping$y
str(p1$mapping$y)
axis_xmin <- min(obs_sci[,dim_x])
axis_xmin
axis_xmin <- min(obs_sci[,dim_x], na.rm = TRUE)
axis_xmin
p1 <- ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
theme(panel.background = element_rect(colour = NA, fill = NA),
panel.border = element_rect(colour = NA, fill = NA),
axis.title = element_text(hjust = 0, size = 12),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12)) +
annotate(geom = 'segment',
x = axis_xmin,
xend = axis_xmin + 1,
y = axis_ymin,
yend = axis_ymin,
color = 'black',
lwd = 1,
arrow = arrow(
angle = 30,
length = unit(
x = 3,
units = 'mm'
)
)
) +
annotate(geom = 'segment',
x = axis_xmin,
xend = axis_xmin,
y = axis_ymin,
yend = axis_ymin + 1,
color = 'black',
lwd = 1,
arrow = arrow(
angle = 30,
length = unit(
x = 3,
units = 'mm'
)
)
)
dim_x <- 'myeloid_UMAP_1'
dim_x <- 'myeloid_UMAP_1'
dim_y <- 'myeloid_UMAP_2'
dim_col <- 'L2_taxon'
axis_xmin <- min(obs_sci[,dim_x], na.rm = TRUE)
axis_ymin <- min(obs_sci[,dim_y], na.rm = TRUE)
p1 <- ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
theme(panel.background = element_rect(colour = NA, fill = NA),
panel.border = element_rect(colour = NA, fill = NA),
axis.title = element_text(hjust = 0, size = 12),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12)) +
annotate(geom = 'segment',
x = axis_xmin,
xend = axis_xmin + 1,
y = axis_ymin,
yend = axis_ymin,
color = 'black',
lwd = 1,
arrow = arrow(
angle = 30,
length = unit(
x = 3,
units = 'mm'
)
)
) +
annotate(geom = 'segment',
x = axis_xmin,
xend = axis_xmin,
y = axis_ymin,
yend = axis_ymin + 1,
color = 'black',
lwd = 1,
arrow = arrow(
angle = 30,
length = unit(
x = 3,
units = 'mm'
)
)
)
p1
p1 <- ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
theme(panel.background = element_rect(colour = NA, fill = NA),
panel.border = element_rect(colour = NA, fill = NA),
axis.title = element_text(hjust = 0, size = 12),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12)) +
guides(color = guide_legend(override.aes = list(size = 4)))
p1 <- ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
theme(panel.background = element_rect(colour = NA, fill = NA),
panel.border = element_rect(colour = NA, fill = NA),
axis.title = element_text(hjust = 0, size = 12),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12)) +
guides(color = guide_legend(override.aes = list(size = 4))) +
annotate(geom = 'segment',
x = axis_xmin,
xend = axis_xmin + 1,
y = axis_ymin,
yend = axis_ymin,
color = 'black',
lwd = 1,
arrow = arrow(
angle = 30,
length = unit(
x = 3,
units = 'mm'
)
)
) +
annotate(geom = 'segment',
x = axis_xmin,
xend = axis_xmin,
y = axis_ymin,
yend = axis_ymin + 1,
color = 'black',
lwd = 1,
arrow = arrow(
angle = 30,
length = unit(
x = 3,
units = 'mm'
)
)
)
p1
p1 <- ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
theme(panel.background = element_rect(colour = NA, fill = NA),
panel.border = element_rect(colour = NA, fill = NA),
axis.title = element_text(hjust = 0, size = 12),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12)) +
guides(color = guide_legend(override.aes = list(size = 4)))
p1
p1 <- ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
theme(panel.background = element_rect(colour = NA, fill = NA),
panel.border = element_rect(colour = NA, fill = NA),
axis.line = element_line(color = 'black'),
axis.title = element_text(hjust = 0, size = 12),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12)) +
guides(color = guide_legend(override.aes = list(size = 4)))
p1
p1 <- ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
theme(panel.background = element_rect(colour = NA, fill = NA),
panel.border = element_rect(colour = NA, fill = NA),
axis.line = element_line(color = 'black', size = 1),
axis.title = element_text(hjust = 0, size = 12),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12)) +
guides(color = guide_legend(override.aes = list(size = 4)))
p1
p1 <- ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
theme(panel.background = element_rect(colour = NA, fill = NA),
panel.border = element_rect(colour = NA, fill = NA),
axis.line = element_line(color = 'black', size = 0.5),
axis.title = element_text(hjust = 0, size = 12),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12)) +
guides(color = guide_legend(override.aes = list(size = 4)))
p1
obs_sci <- obs_sci[sample(x = 1:nrow(obs_sci), size = nrow(obs_sci)),]
dim_x <- 'myeloid_UMAP_1'
dim_y <- 'myeloid_UMAP_2'
dim_col <- 'L2_taxon'
axis_xmin <- min(obs_sci[,dim_x], na.rm = TRUE)
axis_ymin <- min(obs_sci[,dim_y], na.rm = TRUE)
p1 <- ggplot(data = obs_sci, mapping = aes_string(x = dim_x, y = dim_y)) +
geom_point(mapping = aes_string(color = dim_col)) +
theme(panel.background = element_rect(colour = NA, fill = NA),
panel.border = element_rect(colour = NA, fill = NA),
axis.line = element_line(color = 'black', size = 0.5),
axis.title = element_text(hjust = 0, size = 12),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.key = element_rect(fill = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12)) +
guides(color = guide_legend(override.aes = list(size = 4)))
p1
levels(obs_sci$L1_taxon)
dim(obs_sci)
sci@meta.data
rm(p1)
sci@assays$RNA@meta.features
vars_sci <- sci@assays$RNA@meta.features
min_gene <- which(Matrix::rowSums(x = sci[['RNA']]@counts) > 0)
table(min_gene)
min_gene
table(Matrix::rowSums(x = sci[['RNA']]@counts) > 0)
ncol(sci)
sqrt(ncol(sci))
min_gene <- table(Matrix::rowSums(x = sci[['RNA']]@counts) > 15)
min_gene
table(apply(X = sci[['RNA']]@counts, FUN = function(x) any(x > 0), MARGIN = 1))
head(x_sci[min_gene,])
x_sci[1]
x_sci[1,]
min_gene <- which(Matrix::rowSums(x = sci[['RNA']]@counts) > 15)
x_sci <- as.matrix(x = sci[['RNA']]@counts)[min_gene,]
x_sci <- Matrix::as.matrix(x = sci[['RNA']]@counts)[min_gene,]
getwd()
write.csv(x = obs_sci, file = './shinyApp/obs_sci.csv')
colnames(obs_sci)
umap_sci <- sci[['umap']]@cell.embeddings
colnames(umap_sci) <- c('sci_UMAP_1','sci_UMAP_2')
cols_sci <- c('sample_id','time','celltype','orig.ident','nCount_RNA','nFeature_RNA','S.Score','G2M.Score','Phase','CC.Difference','percent_mt','percent_rp','percent_hbb','doublet_scores','dissociationMethod','chemistry')
cols_transfer <- c('L1_taxon','L2_taxon','L3_taxon','myeloid_subcluster','vascular_subcluster','macroglia_subcluster','preprint_subtype','myeloid_seurat_res.0.35','vascular_seurat_res.0.4','macroglia_seurat_res.0.4','myeloid_UMAP_1','myeloid_UMAP_2','vascular_UMAP_1','vascular_UMAP_2','macroglia_UMAP_1','macroglia_UMAP_2')
obs_transfer <- lapply(
X = cols_transfer,
FUN = match_metadata,
order.char = rownames(sci@meta.data),
obs.ls = list(obs_myeloid, obs_vascular, obs_macroglia)
)
obs_transfer <- data.frame(
x = lapply(
X = cols_transfer,
FUN = match_metadata,
order.char = rownames(sci@meta.data),
obs.ls = list(obs_myeloid, obs_vascular, obs_macroglia)
)
)
umap_sci <- sci[['umap']]@cell.embeddings
colnames(umap_sci) <- c('sci_UMAP_1','sci_UMAP_2')
cols_sci <- c('sample_id','time','celltype','orig.ident','nCount_RNA','nFeature_RNA','S.Score','G2M.Score','Phase','CC.Difference','percent_mt','percent_rp','percent_hbb','doublet_scores','dissociationMethod','chemistry')
obs_sci <- cbind(sci@meta.data[, cols_sci], umap_sci)
obs_sci <- cbind(obs_sci, obs_transfer)
colnames(obs_sci) <- c(cols_sci, colnames(umap_sci), cols_transfer)
obs_sci <- obs_sci[sample(x = 1:nrow(obs_sci), size = nrow(obs_sci)),]
colnames(obs_sci)
umap_sci <- sci[['umap']]@cell.embeddings
colnames(umap_sci) <- c('sci_UMAP_1','sci_UMAP_2')
cols_sci <- c('sample_id','time','celltype','orig.ident','nCount_RNA','nFeature_RNA','S.Score','G2M.Score','Phase','CC.Difference','percent_mt','percent_rp','percent_hbb','doublet_scores','dissociationMethod','chemistry')
obs_sci <- cbind(sci@meta.data[, cols_sci], umap_sci)
obs_sci <- cbind(obs_transfer, obs_sci)
colnames(obs_sci) <- c(cols_transfer, colnames(umap_sci), cols_sci)
colnames(obs_sci)
obs_sci <- obs_sci[sample(x = 1:nrow(obs_sci), size = nrow(obs_sci)),]
write.csv(x = obs_sci, file = './shinyApp/obs_sci.csv')
write.csv(x = obs_sci, file = './shinyApp/obs_sci.csv', quote = FALSE)
vars_sci <- sci@assays$RNA@meta.features
write.csv(x = vars_sci, file = './shinyApp/vars_sci.csv', quote = FALSE)
rm(list = ls())
gc()
dev.off()
